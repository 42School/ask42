%h1.text-center{data: {room_id: params[:room_id]}}
  = Room.find(params[:room_id]).name
%p.text-center= link_to 'Ask a question', new_room_question_path, class: "btn btn-default"


%table.table.table-hover
  %tbody.list
    - @questions.each do |question|
      %tr
        %td.votes
          =render "votes", question: question

        %td.question
          %p #{question.question}
          %p.small_info by #{question.user.login} #{time_ago_in_words(question.created_at)} ago
        - if user_signed_in? and (current_user.admin? or RoomsUser.where(:user_id => current_user.id, :room_id => params[:room_id]).first.editor? rescue nil)
          %td.action.pull-right.col-lg-2
            = link_to "Answer", room_question_path(:id => question.id), method: 'put',  class: "btn btn-info btn-xs", remote: true
            = link_to '', room_question_path(question, id: question.id), method: :delete, data: { confirm: "Are you sure you want to delete this question?" }, class: "btn btn-xs btn-danger glyphicon glyphicon-remove"


-if @questions_answered.first
  %h3.text-center="Answered Questions"
%table.table.table-hover
  %tbody.list
    - @questions_answered.each do |question|
      %tr.active
        %td.votes.small
          .vote_final_count
            = question.question_voters.map {|x| x.vote}.inject{|sum,x| sum + x }.to_i

        %td.question.answered
          %p #{question.question}
          %p.small_info by #{question.user.login} #{time_ago_in_words(question.created_at)} ago
        - if user_signed_in? and current_user.admin?
          %td.action.pull-right.col-lg-2
            = link_to '', room_question_path(id: question.id), method: :delete, data: { confirm: "Are you sure you want to delete this question?" }, class: "btn btn-xs btn-danger glyphicon glyphicon-remove"

